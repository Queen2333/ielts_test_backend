name: Build and Deploy to Docker Hub and Server

# 触发条件：当代码推送到 main 分支时执行
on:
  push:
    branches:
      - main

# 定义作业
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # 使用最新的 Ubuntu 运行环境

    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. 设置 Docker Buildx（支持多架构构建，可选）
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. 登录 Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub 用户名
          password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub 访问令牌

      # 4. 构建并推送 Docker 镜像到 Docker Hub
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .              # 构建上下文（当前目录）
          file: ./Dockerfile      # Dockerfile 路径
          push: true              # 推送镜像到 Docker Hub
          tags: ${{ secrets.DOCKER_USERNAME }}/my-app:latest  # 镜像名称和标签

      # 5. 部署到远程服务器
      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}        # 服务器 IP
          username: ${{ secrets.SERVER_USERNAME }} # 服务器用户名
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            # 拉取最新的镜像
            docker pull ${{ secrets.DOCKER_USERNAME }}/my-app:latest
            # 停止并删除旧容器（如果存在）
            docker stop my-app || true
            docker rm my-app || true
            # 运行新容器
            docker run -d --name my-app -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/my-app:latest